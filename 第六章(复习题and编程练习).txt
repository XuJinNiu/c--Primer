复习题:
1.请看下面两个计算空格和换行数目的代码片段:
	 while(cin.get(ch))
	 {
	     if(ch==' ')
		spaces++;
	     ig(ch=='\n')
		newlines++;
	 }
	while(cin.get(ch))
	{
	    if(ch==' ')
		spaces++;
	    else if(ch=='\n')
		newlines++;
	}
第二种格式比第一种格式好在哪里?
	答:格式二不用再次判断ch==' '效率更高
2.在程序清单6.2中,用ch+1替换++ch将发生什么情况呢?
	++ch是字符类型,将作为字符打印,ch+1是int型,将作为数字打印
3.请认真考虑下面的程序:
	 int main()
	 {
	     char ch;
	     int ct1,ct2;
	     ct1=ct2=0;
	     while((ch=cin.get())!='$')
	     {
		 cout<<ch;
		 ct1++;
		 if(ch='$')
		    ct2++;
		 cout<<ch;
	     }
	     cout<<"ct1 ="<<ct1<<",ct2="<<ct2<<"\n";
	     return 0;
	 }
假设输入如下,其中->表示回车:
Hi!->
Send $10 or $20 now!->
则将输出什么(还记得吗,输入被缓冲)?
	答:H$i$!$
	   $S$e$n$d $ct1=5,ct2=5
	(2):
4.创建表示下述条件的逻辑表达式:
	a:weight大于或等于115,但小于125;   b:ch为q或Q.    c:x为偶数,但不是26
	(weight>=115&&weight<125)	   (ch=='q'||ch=='Q')  (x%2==0&&x!=26)
	d:x为偶数,但不是26的倍数.  e:donation位于1000-2000中或guest为1.
	(x%2==0&&x%26!=0)            (donation>=1000&&donation<=2000||guest==1)
	f:ch是小写字母或者大写字母(假设小写字母是一次编码的,大写字母也是依次编码的,但在大小写字母间编码不
	是连续的).
	(ch>='a'&&ch<='z'||ch>='A'&&ch<='Z')
5.在英语中,"I will not not speak"(我不会不会说),的意思与"I will speak";相同,那么!!x是否与x相同?
	答:如果x是>1的值,则不一样
6.创建一个条件表达式,其值为变量的绝对值,也就是说,如果变量x为正,则表达式的值为x:但如果x为负,则表达式的值
为x---这是一个正值
	x>0?x:-x;
7.用switch改写下面的代码片段:
	if(ch=='A')
		a_grade++;
	else if(ch=='B')
		b_grade++;
	else if(ch=='C')
		c_grade++;
	else if(ch=='D')
		d_grade++;
	else 
		f_grade++;

		  switch(ch)
		    {
		    case 'A':
			a_grade++;break;
		    case 'B':
			b_grade++;break;
		    case 'C':
			c_grade++;break;
		    case 'D':
			 d_grade++;break;
		    default
			f_grade++;break;
		    }
8.对于程序清单6.10,与使用数字相比,使用字符(如a和c)表示菜单选项和case标签有何有点呢?(提示,想想用户输入q和输入
  5的情况.)
	
9.请看下面的代码片段:
	int line=0;
	char ch;
	while(cin.get(ch))
	{
	  if(ch=='Q')
		break;
	  if(ch!='\n')
		continue;
	   line++;
	}
  请重写该代码片段,不要使用break和continue语句.
	int line=0;
	char ch;
	while(cin.get(ch)&&ch!='Q')
	{
	  if(ch!='\n')
	   line++;
	}
编程练习:
1.编写一个程序,读取键盘输入,直到遇到'@'符号为止,并回显输入(数字除外),同时将小写字符转换为大写字符,大写字符
转换为小写字符.(别忘了cctype函数系列)
	 int main()
	{
	  char ch;
	  cin.get(ch);
	  while(ch!='@')
	  {
	      if(isalpha(ch))
	      {
		  if(islower(ch))
		    ch=toupper(ch);
		  else if(isupper(ch))
		    ch=tolower(ch);
		    else if (ch==' ')
		    ;
	      }
	      cout<<ch;
	      cin.get(ch);
	  }
	  return 0;
	}
2.编写一个程序,最多将10个donation值读入 到一个double数组中,程序遇到非数字输入时将结束输入,并报告这些数字
  的平均值以及数组中有多少个数字大于平均值
		int main()
		{
		  int i=0;
		  double donation[10];
		  double num=0.0;
		  double sum=0;
		  double ave=0;
		  int count,j;
		  count=0;
		  while(i<10&&!isalpha(num)&&cin>>num)
		  {

		      donation[i]=num;
		      i++;
		      sum+=num;
		  }
		  ave=sum/i;
		  for(j=0;j<i;j++)
		  {
		      if(donation[j]>ave)
		      {
			  count++;
		      }
		  }
		  cout<<"平均值:"<<ave;
		  cout<<"大于平均值:"<<count;
		    return 0;
		}

3.编写一个菜单驱动程序的雏形,该程序显示一个提供4个选项的菜单--每个选项用一个字母标记.如果用户使用有效选项
  之外的字母进行相应,程序将提示用书输入一个有效的字母,知道用户这样做为止.然后,该程序使用一条switch语句,根据用户的
  选择执行一个简单操作,该程序的运行情况如下:
	Please enter one of the following choices:
	c) carnivore		p)pianist
	t)tree			g)game
	f
	Please enter a,c,p,t,or g:q
	Please enter a,c,p,t,or,g:t
	A maple is a tree. 
		int main()
		{
		    char ch;
		    cout<<"Please enter one of the following choices:"<<endl;
		    cout<<"c) carnivore"<<endl;
		    cout<<"p)pianist"<<endl;
		    cout<<"t)tree	"<<endl;
		    cout<<"g)game"<<endl;
		    cin>>ch;
		    while(ch!='a'&&ch!='c'&&ch!='p'&&ch!='t'&&ch!='g')
		    {
			cout<<"Please enter a,c,p,t,or g:q";
		    }
		    switch(ch)
		    {
		    case 'c':
			cout<<"A maple is a carnivore";break;
		    case 'p':
			cout<<"A maple is a pianst.";break;
		    case 't':
			cout<<"A maple is a tree.";break;
		    case 'g':
			cout<<"A maple is a game.";break;
		    default:
			break;
		    }
		    return 0;
		}

4.加入Benevolent Order of Programmer后,在BOP大会上,人们便可以通过加入者的真实姓名,头衔或秘密BOP姓名来了解他(她)
  请编写一个程序,可以使用真实姓名,头衔,秘密姓名或成员偏好来列出成员,编写该程序时,请使用下面的结构:
	 struct bop
	 {
	     char fullname[strsize];
	     char title[strsize];
	     char bopname[strsize];
	     int preference;
	 };
该程序创建一个由上述结构组成的小型数组,并将其初始化为适当的值,另外该程序使用一个循环,让用户在下面的选项中
进行选择:
	a.display by name   b.display by title
	c.display by bopname d.display by preference
	q.quit
注意,"display by preference"并不意味着根据成员的偏好来列出成员,例如,如果偏好号位1,则选择d将显示程序员的
头衔,该程序的运行情况如下:
	Benevolent Order of Programmer Report
	a.display by name   b.display by title
	c.display by bopname d.display by preference
	q.quit
	Enter your choice:a
	Wimp Macho
	Raki Rhodes
	Celia Laiter
	Hoppy Hipman
	Pat Hand
	Next choice:d
	Wimp Macho
	Junior Programmer
	MIPS
	Analyst Trainee
	LOOPY
	Next choice:q
	Bye!
		const int strsize=50;
	struct bop
	{
	     char fullname[strsize];
	     char title[strsize];
	     char bopname[strsize];
	     int preference;
	};
	int main()
	{
	    char ch;
	    int i;
	    bop b[5]={{"Wimp","English Teacher","DEMON",0},
	    {"Raki Rhodes","Junior Programmer","BOOM",1},
	    {"Celia Laiter","Super Star","MIPS",2},
	    {"Hoppy Hipman","Analyst Trainee","WATEE",1},
	    {"Pat Hand","Police","LOOPY",2}};
	    cout<<"Benevolent Order of Programmer Report:"<<endl;
	    cout<<"a.display by name  ";
	    cout<<"b.display by title  "<<endl;
	    cout<<"c.display by bopname ";
	    cout<<"d.display by preference "<<endl;
	    cout<<"q.quit "<<endl;
	    cin>>ch;
	    while(ch!='a'&&ch!='b'&&ch!='c'&&ch!='d'&&ch!='q')
	    {
		cout<<"Please enter a,c,p,t,or q";
	    }
	    switch(ch)
	    {
	    case 'a':
		for(i=0;i<5;i++)
		{
		    cout<<b[i].fullname<<endl;
		}
		break;
	    case 'b':
		for(i=0;i<5;i++)
		{
		    cout<<b[i].title<<endl;
		}
		break;
	    case 'c':
		  for(i=0;i<5;i++)
		    {
			cout<<b[i].bopname<<endl;
		    }
		break;
	    case 'd':
		  for(i=0;i<5;i++)
		    {
			cout<<b[i].bopname<<endl;
		    }
		break;
	    case 'q':
		cout<<"Bye!";break;
	    }
	    return 0;
	}

5.在Neutronia王国,货币单位是tvarp,收入所得税的计算方式如下:
	5000 tvarps:不收税
	5001-15000 tvarps:10%
	15001-35000 tvarps:15%
	35000 tvarps以上:20%
	例如,某人的收入为38000 tvarps,则其所得税为5000*0.00+10000*0.10+20000*0.15+3000*0.2=4600 tvarps,
	请编写一个程序,使用循环来要求用户输入收入,并报告所得税,当用户输入负数或非数字时,循环结束.
		int main()
	{
	    cout<<"Please enter your income:";
	    double income;
	    double revenue;
	    cin>>income;
	    while(income>0)
	    {
		if(income<=5000)
		    revenue=0;
		else if(income<=15000)
		    revenue=(income-5000)*0.1;
		else if(income<=35000)
		    revenue=1000+(income-5000)*0.15;
		else if(income>35000)
		    revenue=1000+20000*0.15+(income-35000)*0.2;
		cout<<"your revenue:"<<revenue<<endl;
		cin>>income;
	    }
	    return 0;
	}
6.编写一个程序,记录捐助给"维护合法权利团体"的钱,该程序要求用户输入捐献者数目,然后要求用户输入每一个捐献者的
姓名和款项,这些信息被存储在一个动态分配的结构数组中,每个结构有两个成员:用来存储姓名的字数组(或string对象)
和用来存储款项的double成员,读取所有的数据后,程序将显示所有捐款超过10000的捐款者的姓名及其捐款数额,该列表前应包含
一个标题,指出下面的捐款者是重要捐款人(Grand Patrons).然后,程序将列出其他的捐款者,该列表要以Patrons开头,如果某种
类别没有捐款者,则程序将打印单词"none",该城西只显示着两种类别,而不进行排序.
	struct patron
	{
	    string name;
	    double money;
	};
	int main()
	{
	    cout<<"捐款人数:";
	    int num;
	    (cin>>num).get();
	    patron *p=new patron[num];
	    int i=0;
	    while(i<num)
	    {
		cout<<"姓名:";
		getline(cin,p[i].name);
		cout<<"捐款额:";
		(cin>>p[i].money).get();
		i++;
	    }
	    for(i=0;i<num;i++)
	    {
		if(p[i].money<=10000)
		{
		    cout<<p[i].name<<"\n"<<p[i].money<<endl;
		}
	    }
	    return 0;
	}

7.编写一个程序,他每次读取一个单词,知道用户只输入q,然后,该程序指出有多少个单词以元音打头,有多个单词以辅音打头,
还有多少个单词不属于这两类,为此,方法之一是,使用isalpha()来区分以字母和其他字符打头的单词,使用if和switch语句来
确定哪些以元音打头,该程序的运行情况如下:
	Enter words(q to quit):
	The 12 awesome 15 meters ambled
	quietly across 15 meters of lawn.q
	5 words beginning with vowdls
	4 words beginning with consonants
	2 others
		int main()
		{
		    cout<<"Enter words(q to quit):";
		    string word;
		    int fuyin=0;
		    int other=0;
		    int yuanyin=0;
		    while(cin>>word)
		    {
			if(isalpha(word[0]))
			{
			     if(word[0]=='q'&&word.size()==1)
			    {
				break;
			    }
			    else if(word[0]=='a'||word[0]=='e'||word[0]=='i'||word[0]=='o'||word[0]=='u')
			    {
				yuanyin++;
			    }
			    else
			    {
				fuyin++;
			    }
			}

			else
			{
			    other++;
			}
		    }
		    cout<<"元音:"<<yuanyin<<endl;
		    cout<<"辅音:"<<fuyin<<endl;
		    cout<<"其他:"<<other<<endl;
		    return 0;
		}

8.编写一个程序,它打开了一个文本文件,逐个字符的读取该文件,直到到达文本末尾,然后指出该文件中包含多少字符.
	int main()
	{
	    fstream fs("D:\\a.txt");
	    char value;
	    int num=0;
	    fs>>value;
	    while(fs.good())
	    {
		num++;
		fs>>value;
	    }
	    cout<<num;
	    fs.close();
	    return 0;
	}
9.完成编程练习6,但从文件中读取所需的信息,该文件的第一项应为捐款人数,余下的内容硬要成对的行,第二行为位捐款数额
,即该文件应类似于下面所示:
	4
	Sam Stone
	2000
	Freida Flass
	100500
	Tammy Tubbs
	5000
	Rich Raptor
	55000

	int main()
	{
	    fstream fs("D:\\a.txt");
	    if(!fs.is_open())
	    {
		cout<<"文件打开失败"<<endl;
	    }
	    else
	    {
		cout<<fs.rdbuf();
	    }
	    fs.close();
	    return 0;
	}
