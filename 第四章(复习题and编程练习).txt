复习题:

1.如何声明下述数据?
	a:actor是由30个char组成的数组.  char actor[30]; array<char,60> actor;
	b:betsie是由100个short组成的数组. short betsie[100]; array<short,100> betsie;
	c:chuck是由13个float组成的数组. float chuck[13]; array<float,13> chuck;
	d:dispea是由63个long double组成的数组 long double dispea[64]; array<long double,64>dispea;
2.声明一个包含五个元素的int数组,并初始化为前五个正奇数.
	int oddly[5]={1,3,5,7,9};
3.编写一条语句,将问题2中的数组的第一个元素和最后一个元素的和赋值给变量even.
       int even=oddly[0]+oddly[4];
4.编写一条语句,显示float数组ideas中第二个元素的值:
	cout<<ideas[1]<<endl;
5.声明一个char的数组,并将其初始化为字符串"cheeseburger";
	char lunch[number of cheeseburger+1]="cheeseburger";
6.设计一个描述鱼的结构声明.结构中包括鱼的品种,重量(整数,单位盎司)和长度(英寸,包括小数)
	struct fish
	{
	  char kind[20];
	  int weight;
	  float length;
	};
7.声明一个问题6中定义结构的变量,并对他初始化.
  fish petes ={"trout",12,26.25};
8.用enum定义一个名为Response的类型,它包含Yes,No的Maybe等enum量,其中Yes的值为1,No的值为0,Maybe为2.
	 enum Response{No,Yes,Maybe};
9.假设ted是一个double变量,请声明一个指向ted的指针,并使用该指针来显示ted的值.
	double *pd=&ted; cout<<*pd<<endl;
10.假设treacle是一个包含10个元素的float数组,请声明一个指向treacle的第一个元素指针,并使用该指针来显示
数组的第一个元素和最后一个元素.
	float *pf=treacle;
	cout<<*pf<<*(pf+9)<<endl;
	cout<<pf[0]<<pf[9]<<endl;
11.编写一段代码,要求用户输入一个正整数,然后创建一个动态的int数组,其中包含的元素数目等于用户输入的值
	int size;
	cout<<"Please enter size";
	cin>>size;
	vector<int> arr[size];
12.下面的代码是否有效,如果有效,他讲打印出什么结果?
	cout<<(int *)"Home of the jolly bytes";
	有效,打印字符串的首地址.
13.编写一段代码,给问题6中描述结构的动态分配内存,然后读取该结构的成员的值.
	fish *f=new fish;
	cout<<"Enter kind of fish";
	cin>>f->kind;
14.程序清单4.6指出了混合输入数字和一行字符串时存储的问题,如果将下面的代码:
	cin.getline(address,80);替换为cin>>address;将对程序的运行带来什么影响?
	cin>>将跳过空格(包括换行符),只读取一个单词,而不是整行.


编程练习:
1.编写一个c++程序,如下输出范围所示的那样请求并显示信息:
 What is your first name?Betty Sue
 What is your last name?Yew
 What letter grade do you deserve?B
 What is your age?22
 Name:Yew Betty Sue
 Grade:C
 Age:22
 注意:该程序应该接受的名字包含多个单词.另外,程序将向下调成成绩,即向上调一个字母,假设用户请求A,B,C所以不必担心
 D和F之间的空档.
	const int nsize=20;
	struct student
	{
	    char firstname[nsize];
	    char lastname[nsize];
	    char grade;
	    int age;
	};
	int main()
	{
	    student s;
	    cout<<"What is your first name?";
	    cin.getline(s.firstname,nsize);
	    cout<<"What is your last name?";
	    cin.getline(s.lastname,nsize);
	    cout<<"What letter grade do you deserve?";
	    cin>>s.grade;
	    cout<<"What is your age?";
	    cin>>s.age;
	    cout<<"Name:"<<s.firstname<<" "<<s.lastname<<endl;
	    cout<<"Grade:"<<s.grade;
	    cout<<"Age:"<<s.age;
	    return 0;
	}
2.修改程序清单4.4,使用c++ string类而不是char数组.
	 int main() 
	 {
	    using namespace std; 
	    string name,dessert; 
	    cout<<"Enter your name: \n"; 
	    getline(cin,name); 
	    cout<<"Enter your favorite dessert: \n"; 
	    getline(cin,dessert);     
	    cout<<"I have some delicious "<<dessert; 
	    cout<<" for you, "<<name<<".\n"; 
	    return 0;  
	}
3.编写一个程序,它要求用户首先输入其名,然后输入其姓;然后程序使用一个逗号和空格将姓和名组合起来,并存储
和显示组合结果,请使用char数组和头文件cstring中的函数,下面是该程序运行时的情形:
	Enter yout first name:Flip
	Enter your last name:Fleming
	Here's the information in a single string:Fleming,Flip
	int main()
	{
	    char name[50];
	    char firstname[20];
	    char lastname[20];
	    cout<<"Enter yout first name:";
	    cin.getline(firstname,20);
	    cout<<"Enter your last name:";
	    cin.getline(lastname,20);
	    strcpy(name,firstname);
	    strcat(name,", ");
	    strcat(name,lastname);
	    cout<<name;
	    return 0;
	}
5.结构CandyBar包含三个成员,第一个成员存储了糖块的品牌,第二个成员存储了糖块的重量(可以有小数),第三个成员存储了
  糖块的卡路里含量(整数),请编写一个程序,声明这个结构,创建一个名为snack的CandyBar变量,并将其成员分别初始化为
  "MonchaMunch",2.3和350.初始化应在声明snack时进行,最后程序显示snack变量的内容.
	 struct CandyBar
	 {
	     char name[20];
	     float weight;
	     int calory;
	 };
	 ostream &operator<<(ostream &os,const CandyBar &s)
	 {
	     os<<"name:"<<s.name<<endl;
	     os<<"weight:"<<s.weight<<endl;
	     os<<"calory:"<<s.calory<<endl;
	     return os;
	 }
	int main()
	{
	    CandyBar candy{"MonchaMunch",2.3,350};
	    cout<<candy;
	    return 0;
	 }
6.结构CandyBar包含三个成员,正如5题所示,请编写一个程序,创建包含3个元素的CandyBar数组,并将它们初始化为所选择的值,
然后显示每个结构的内容.
	int main()
	{
	    CandyBar snack[3]={{"Mocha Munch",2.3,350},{"XuFuJi",1.1,300},{"Alps",0.4,100}};
	    cout<<snack[0];
	    cout<<snack[1];
	    cout<<snack[2];
	    return 0;
	}
7.William Wingate从事比萨饼分析服务,对于每个比萨饼,他都需要记录下列信息:
	a:比萨饼公司的名称,可以由多个单词组成.
	b:比萨饼的直径.
	c:比萨饼的重量.
请设计一个能够存储这些信息的结构,并编写一个使用这种结构变量的程序,程序请求用户输入上述信息,然后显示这些信息,
请使用cin或者它的方法和cout.
	 struct pizza
	 {
	     char  company[20];
	     double diameter;
	     int weight;
	 };
	 ostream &operator<<(ostream &os,const pizza &s)
	 {
	     os<<"Campany:"<<s.company<<endl;
	     os<<"diameter:"<<s.diameter<<endl;
	     os<<"weight:"<<s.weight<<endl;
	     return os;
	 }
	int main()
	{
	    pizza p;
	    cout<<"Enter company:";
	    cin.getline(p.company,20);
	    cout<<"Enter diameter";
	    cin>>p.diameter;
	    cout<<"Enter weight:";
	    cin>>p.weight;
	    cout<<p;
	    return 0;
	}

8.完成编程练习7,但使用new来为存储分配内存,而不是声明一个结构变量,另外,让程序在请求输入比萨饼公司之前输入比萨饼的
直径.

	 struct pizza
	 {
	     char  company[20];
	     double diameter;
	     int weight;
	 };
	 ostream &operator<<(ostream &os,const pizza *s)
	 {
	     os<<"Campany:"<<s->company<<endl;
	     os<<"diameter:"<<s->diameter<<endl;
	     os<<"weight:"<<s->weight<<endl;
	     return os;
	 }
	int main()
	{
	    pizza *p=new pizza;
	    cout<<"Enter company:";
	    cin.getline(p->company,20);
	    cout<<"Enter diameter";
	    cin>>p->diameter;
	    cout<<"Enter weight:";
	    cin>>p->weight;
	    cout<<p;
	    delete p;
	    return 0;
	}

9.完成编程练习6.但是用new来动态分配数组,而不是声明一个包含3个元素的CandyBar数组.
	int main()
	{
	    CandyBar *snack=new CandyBar[3];
	    snack[0].name="A";//单个初始化由new动态分配的内存  
	    snack[0].weight=1.1; 
	    snack[0].calory=200;  
	    snack[1].name="B";  
	    snack[1].weight=2.2;
	    snack[1].calory=400;  
	    snack[2].name="C";  
	    snack[2].weight=4.4; 
	    snack[2].calory=500; 
	    return 0;
	}